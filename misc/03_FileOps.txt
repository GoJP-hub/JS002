■パス操作
require("path")のモジュールを利用する
パス、ファイルパス、パス結合等が行える

■ストリーム：Read
require("fs")のモジュールを利用する
・fs.createReadStreamで、ファイルパスと文字コードを設定する
イベントが、「data」「end」
・streamの便宜上、データをかみ砕いて読み込む
・一つ一つを読み込むことをdataという
・endは、すべてが呼び込まれたことを指す
メソッドは、「pause」「resume」「pipe(渡し先stream)」
・pauseは読み込みの一時停止。resumeは、開始・再開。
・pipeは、次の処理にデータを渡す際に利用する

サンプルでは、イベント単位で実装するから
・onメソッドを利用する
・第一引数に文字列でイベント名、第二引数に処理を実装する
・意図としては、データを文字列変数に格納し、ログを出力する
・resumeをやることで、最初にストリームをキックする

■ストリーム：Write
writeメソッドで、基本的に書き出していく
・段階的に内部バッファーに書き込む
・内部バッファがいっぱいになった際、drainイベントが発生して、実際に書き込む
endメソッドでは、最後のデータであることが告げられるから、すべて書き出す
・すべて書き終わるとfinishイベントになる
pipeイベントは、前工程でpipeが呼び出された際に利用される。


■補足
